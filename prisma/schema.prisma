// prisma/schema.prisma

// Always use  `npx prisma migrate dev` to apply changes to the database
// To see the tables locally, use `npx prisma studio`

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "rhel-openssl-3.0.x"]
}

model questionHistory {
  id             String  @id @default(cuid())
  question       String
  category       String
  subcategory    String
  issue_type     String
  reviewed_answer String
  userId         String?
  denomination   String @default("reformed-baptist")
  createdAt      DateTime @default(now())
}

// Prayer Tracker models

enum MemberRole {
  OWNER
  MEMBER
}

enum RequestStatus {
  ACTIVE
  ANSWERED
  ARCHIVED
}

model userProfile {
  id                     String   @id @default(cuid())
  appwriteUserId         String   @unique
  displayName            String
  email                  String?
  defaultSpaceId         String?
  defaultSpace           prayerFamilySpace? @relation("DefaultSpaceProfiles", fields: [defaultSpaceId], references: [id])
  answeredPersonalCount  Int      @default(0)
  answeredFamilyCount    Int      @default(0)
  journalEntriesCount    Int      @default(0)
  lastPrayerAt           DateTime?
  lastSeenAt             DateTime @default(now())
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}

model prayerFamilySpace {
  id               String   @id @default(cuid())
  spaceName        String
  shareCode        String   @unique
  createdByUserId  String
  archivedAt       DateTime?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  members          prayerMember[]
  families         prayerFamily[]
  personalRequests prayerPersonalRequest[]
  journal          prayerJournalEntry[]
  profiles         userProfile[] @relation("DefaultSpaceProfiles")
}

model prayerMember {
  id             String   @id @default(cuid())
  spaceId        String
  space          prayerFamilySpace @relation(fields: [spaceId], references: [id])
  appwriteUserId String
  displayName    String
  role           MemberRole @default(MEMBER)
  joinedAt       DateTime @default(now())
  lastPrayed     prayerFamily[] @relation("LastPrayedBy")
}

model prayerFamily {
  id                      String   @id @default(cuid())
  spaceId                 String
  space                   prayerFamilySpace @relation(fields: [spaceId], references: [id])
  familyName              String
  parents                 String
  children                String[]
  categoryTag             String?
  lastPrayedAt            DateTime?
  lastPrayedByMemberId    String?
  lastPrayedBy            prayerMember? @relation("LastPrayedBy", fields: [lastPrayedByMemberId], references: [id])
  journalNotes            String?
  linkedScripture         String?
  archivedAt              DateTime?
  requests                prayerFamilyRequest[]
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}

model prayerFamilyRequest {
  id              String   @id @default(cuid())
  familyId        String
  family          prayerFamily @relation(fields: [familyId], references: [id])
  status          RequestStatus @default(ACTIVE)
  requestText     String
  notes           String?
  linkedScripture String?
  dateAdded       DateTime @default(now())
  dateUpdated     DateTime @updatedAt
  lastPrayedAt    DateTime?
  answeredAt      DateTime?
}

model prayerPersonalRequest {
  id                String   @id @default(cuid())
  spaceId           String
  space             prayerFamilySpace @relation(fields: [spaceId], references: [id])
  status            RequestStatus @default(ACTIVE)
  requestText       String
  notes             String?
  linkedScripture   String?
  requesterMemberId String?
  dateAdded         DateTime @default(now())
  dateUpdated       DateTime @updatedAt
  lastPrayedAt      DateTime?
  answeredAt        DateTime?
}

model prayerJournalEntry {
  id        String   @id @default(cuid())
  spaceId   String
  space     prayerFamilySpace @relation(fields: [spaceId], references: [id])
  entryDate DateTime @default(now())
  entryText String
  tags      String[]
}

model chatHistory {
  id              String    @id @default(cuid())
  userId          String
  conversationName String
  category        String
  subcategory     String
  issue_type      String
  denomination    String @default("reformed-baptist")
  messages        chatMessage[] @relation("ChatMessages")
  createdAt       DateTime  @default(now())
  modifiedAt      DateTime  @updatedAt
}

model chatMessage {
  id        String       @id @default(cuid())
  chatId    String
  chat      chatHistory  @relation(fields: [chatId], references: [id], name: "ChatMessages")
  sender    String       // 'user' or 'assistant'
  content   String
  timestamp DateTime     @default(now())
}

model parrotDevotionals {
  id          String    @id @default(cuid())
  devotional_id String @unique
  bible_verse String
  title       String
  devotional_text     String
  createdAt   DateTime  @default(now())
}

// Church Finder models

enum CoreDoctrineStatus {
  TRUE
  FALSE
  UNKNOWN
}

enum ChurchEvaluationStatus {
  RECOMMENDED
  BIBLICALLY_SOUND_WITH_DIFFERENCES
  LIMITED_INFORMATION
  NOT_ENDORSED
}

model church {
  id                    String   @id @default(cuid())
  name                  String
  website               String   @unique
  phone                 String?
  email                 String?
  denominationLabel     String?
  denominationConfidence Float?
  denominationSignals   String[]
  confessionAdopted     Boolean  @default(false)
  confessionName        String?
  confessionSourceUrl   String?
  bestBeliefsUrl        String?
  bestConfessionUrl     String?
  bestAboutUrl          String?
  bestLeadershipUrl     String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  addresses             churchAddress[]
  serviceTimes          churchServiceTime[]
  evaluations           churchEvaluation[]
}

model churchAddress {
  id         String   @id @default(cuid())
  churchId   String
  church     church   @relation(fields: [churchId], references: [id], onDelete: Cascade)
  street1    String?
  street2    String?
  city       String?
  state      String?
  postCode   String?
  latitude   Float?
  longitude  Float?
  sourceUrl  String?
  isPrimary  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model churchServiceTime {
  id        String   @id @default(cuid())
  churchId  String
  church    church   @relation(fields: [churchId], references: [id], onDelete: Cascade)
  label     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model churchEvaluation {
  id                          String   @id @default(cuid())
  churchId                    String
  church                      church   @relation(fields: [churchId], references: [id], onDelete: Cascade)
  rawEvaluation               Json
  badges                      String[]
  secondary                   Json?
  tertiary                    Json?
  coreOnSiteCount             Int
  coreTotalCount              Int
  coverageRatio               Float
  status                      ChurchEvaluationStatus
  coreTrinity                 CoreDoctrineStatus
  coreGospel                  CoreDoctrineStatus
  coreJustificationByFaith    CoreDoctrineStatus
  coreChristDeityHumanity     CoreDoctrineStatus
  coreScriptureAuthority      CoreDoctrineStatus
  coreIncarnationVirginBirth  CoreDoctrineStatus
  coreAtonementNecessary      CoreDoctrineStatus
  coreResurrectionOfJesus     CoreDoctrineStatus
  coreReturnAndJudgment       CoreDoctrineStatus
  coreCharacterOfGod          CoreDoctrineStatus
  createdAt                   DateTime @default(now())
}
